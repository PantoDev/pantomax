"""init

Revision ID: 36d59dc89525
Revises:
Create Date: 2024-10-22 00:26:29.516556

"""
from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '36d59dc89525'
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
  # ### commands auto generated by Alembic - please adjust! ###
  op.create_table('accounts', sa.Column('id', sa.String(), nullable=False),
                  sa.Column('provider', sa.String(), nullable=False),
                  sa.Column('account', sa.String(), nullable=False),
                  sa.Column('enabled', sa.Boolean(), nullable=False),
                  sa.Column('config', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
                  sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
                  sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
                  sa.PrimaryKeyConstraint('id'))
  op.create_index('idx_accounts_whitelistprovider_account',
                  'accounts', ['provider', 'account'],
                  unique=False)
  op.create_table('git_account_providers', sa.Column('id', sa.String(), nullable=False),
                  sa.Column('provider_name', sa.String(), nullable=False),
                  sa.Column('provider_id', sa.String(), nullable=False),
                  sa.Column('config', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
                  sa.Column('url', sa.String(), nullable=True),
                  sa.Column('name', sa.String(), nullable=True),
                  sa.Column('slug', sa.String(), nullable=True),
                  sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
                  sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
                  sa.PrimaryKeyConstraint('id'))
  op.create_index('idx_git_account_providers_provider_name_provider_id',
                  'git_account_providers', ['provider_name', 'provider_id'],
                  unique=False)
  op.create_table(
    'pr_review_data', sa.Column('pr_review_id', sa.String(), nullable=False),
    sa.Column('review_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('comment_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('pr_review_id'))
  op.create_table('pr_review_stats', sa.Column('id', sa.String(), nullable=False),
                  sa.Column('repo_id', sa.String(), nullable=False),
                  sa.Column('pr_no', sa.String(), nullable=False),
                  sa.Column('provider', sa.String(), nullable=False),
                  sa.Column('pr_id', sa.String(), nullable=False),
                  sa.Column('comment_id', sa.String(), nullable=False),
                  sa.Column('comment', sa.String(), nullable=True),
                  sa.Column('like_count', sa.Integer(), nullable=True),
                  sa.Column('dislike_count', sa.Integer(), nullable=True),
                  sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
                  sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
                  sa.PrimaryKeyConstraint('id'))
  op.create_index('idx_pr_review_stats_repo_id_pr_no_provider',
                  'pr_review_stats', ['repo_id', 'pr_no', 'provider'],
                  unique=False)
  op.create_table('pr_reviews', sa.Column('id', sa.String(), nullable=False),
                  sa.Column('repo_id', sa.String(), nullable=False),
                  sa.Column('pr_no', sa.String(), nullable=False),
                  sa.Column('provider', sa.String(), nullable=False),
                  sa.Column('status', sa.String(), nullable=True),
                  sa.Column('reason', sa.String(), nullable=True),
                  sa.Column('no_of_files', sa.Integer(), nullable=True),
                  sa.Column('pr_id', sa.String(), nullable=True),
                  sa.Column('review_type', sa.String(), nullable=True),
                  sa.Column('reviewed_from', sa.String(), nullable=True),
                  sa.Column('reviewed_to', sa.String(), nullable=True),
                  sa.Column('unfiltered_review_count', sa.Integer(), nullable=True),
                  sa.Column('final_review_count', sa.Integer(), nullable=True),
                  sa.Column('lvl2_review_count', sa.Integer(), nullable=True),
                  sa.Column('review_system_token', sa.Integer(), nullable=True),
                  sa.Column('review_user_token', sa.Integer(), nullable=True),
                  sa.Column('review_output_token', sa.Integer(), nullable=True),
                  sa.Column('review_latency', sa.Integer(), nullable=True),
                  sa.Column('correction_system_token', sa.Integer(), nullable=True),
                  sa.Column('correction_user_token', sa.Integer(), nullable=True),
                  sa.Column('correction_output_token', sa.Integer(), nullable=True),
                  sa.Column('correction_latency', sa.Integer(), nullable=True),
                  sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
                  sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
                  sa.PrimaryKeyConstraint('id'))
  op.create_index('idx_pr_reviews_repo_id_pr_no_provider',
                  'pr_reviews', ['repo_id', 'pr_no', 'provider'],
                  unique=False)
  op.create_table('prs', sa.Column('id', sa.String(), nullable=False),
                  sa.Column('repo_id', sa.String(), nullable=False),
                  sa.Column('provider', sa.String(), nullable=False),
                  sa.Column('pr_no', sa.String(), nullable=False),
                  sa.Column('title', sa.String(), nullable=True),
                  sa.Column('pr_status', sa.String(), nullable=True),
                  sa.Column('review_status', sa.String(), nullable=True),
                  sa.Column('review_status_reason', sa.String(), nullable=True),
                  sa.Column('last_review_id', sa.String(), nullable=True),
                  sa.Column('repo_url', sa.String(), nullable=True),
                  sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
                  sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
                  sa.PrimaryKeyConstraint('id'))
  op.create_index('idx_prs_repo_id_pr_no_provider',
                  'prs', ['repo_id', 'pr_no', 'provider'],
                  unique=True)
  op.create_table('token_consumptions', sa.Column('id', sa.String(), nullable=False),
                  sa.Column('system_token', sa.Integer(), nullable=False),
                  sa.Column('user_token', sa.Integer(), nullable=False),
                  sa.Column('output_token', sa.Integer(), nullable=False),
                  sa.Column('total_token', sa.Integer(), nullable=False),
                  sa.Column('consumed_at', sa.DateTime(), nullable=False),
                  sa.Column('consumed_by', sa.String(), nullable=True),
                  sa.Column('purpose', sa.String(), nullable=True),
                  sa.Column('var1', sa.String(), nullable=True),
                  sa.Column('var2', sa.String(), nullable=True),
                  sa.Column('var3', sa.String(), nullable=True), sa.PrimaryKeyConstraint('id'))
  # ### end Alembic commands ###


def downgrade() -> None:
  # ### commands auto generated by Alembic - please adjust! ###
  op.drop_table('token_consumptions')
  op.drop_index('idx_prs_repo_id_pr_no_provider', table_name='prs')
  op.drop_table('prs')
  op.drop_index('idx_pr_reviews_repo_id_pr_no_provider', table_name='pr_reviews')
  op.drop_table('pr_reviews')
  op.drop_index('idx_pr_review_stats_repo_id_pr_no_provider', table_name='pr_review_stats')
  op.drop_table('pr_review_stats')
  op.drop_table('pr_review_data')
  op.drop_index('idx_git_account_providers_provider_name_provider_id',
                table_name='git_account_providers')
  op.drop_table('git_account_providers')
  op.drop_index('idx_accounts_whitelistprovider_account', table_name='accounts')
  op.drop_table('accounts')
  # ### end Alembic commands ###
